<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-US"><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://ericzhng.github.io/docs-matrix-library/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ericzhng.github.io/docs-matrix-library/" rel="alternate" type="text/html" hreflang="en-US" /><updated>2021-06-10T03:29:47+00:00</updated><id>https://ericzhng.github.io/docs-matrix-library/feed.xml</id><title type="html">Matrix Library</title><subtitle>Tutorial for BLAS, LAPACK, SCALAPACK, including both dense and sparse versions.</subtitle><entry><title type="html">PLACE HOLDER</title><link href="https://ericzhng.github.io/docs-matrix-library/blog/2020/08/26/placeholder/" rel="alternate" type="text/html" title="PLACE HOLDER" /><published>2020-08-26T12:00:00+00:00</published><updated>2020-08-26T12:00:00+00:00</updated><id>https://ericzhng.github.io/docs-matrix-library/blog/2020/08/26/placeholder</id><content type="html" xml:base="https://ericzhng.github.io/docs-matrix-library/blog/2020/08/26/placeholder/">&lt;p&gt;TO EDIT SOON.&lt;/p&gt;</content><author><name>Dr. Hui Zhang</name></author><summary type="html">TO EDIT SOON.</summary></entry><entry><title type="html">Hello world of matrix-library</title><link href="https://ericzhng.github.io/docs-matrix-library/blog/2020/08/26/lapack-helloworld/" rel="alternate" type="text/html" title="Hello world of matrix-library" /><published>2020-08-26T12:00:00+00:00</published><updated>2020-08-26T12:00:00+00:00</updated><id>https://ericzhng.github.io/docs-matrix-library/blog/2020/08/26/lapack-helloworld</id><content type="html" xml:base="https://ericzhng.github.io/docs-matrix-library/blog/2020/08/26/lapack-helloworld/">&lt;p&gt;To fill soon.&lt;/p&gt;</content><author><name>Dr. Hui Zhang</name></author><summary type="html">To fill soon.</summary></entry><entry><title type="html">Install matrix-library</title><link href="https://ericzhng.github.io/docs-matrix-library/blog/2020/08/26/installation/" rel="alternate" type="text/html" title="Install matrix-library" /><published>2020-08-26T11:00:00+00:00</published><updated>2020-08-26T11:00:00+00:00</updated><id>https://ericzhng.github.io/docs-matrix-library/blog/2020/08/26/installation</id><content type="html" xml:base="https://ericzhng.github.io/docs-matrix-library/blog/2020/08/26/installation/">&lt;p&gt;This post addresses the installation of matrix-library package in Ubuntu. Other Linux distrbutions are not tested here, but should be able to adapted correspondingly.&lt;/p&gt;

&lt;h2 id=&quot;intro&quot;&gt;Intro&lt;/h2&gt;

&lt;p&gt;The matrix-library contains two packages, LAPACK and ScaLAPACK. BLAS library is included in the LAPACK package. Sometimes compiling and linking them might cause some troubles for novices. Thereby some efforts are taken here to simplify the installation of LAPACK and ScaLAPACK packages to any specified directory.&lt;/p&gt;

&lt;p&gt;The matrix-library source codes are directly from the original packages of LAPACK and ScaLAPACK. The original LAPACK package can be downloaded &lt;a href=&quot;http://www.netlib.org/lapack/&quot;&gt;here&lt;/a&gt; and the original ScaLAPACK is availible &lt;a href=&quot;http://www.netlib.org/scalapack/&quot;&gt;here&lt;/a&gt;. The LAPACK versions is 3.8.0 and ScaLAPACK version if 2.0.0. The newest versions will be updated accordingly.&lt;/p&gt;

&lt;p&gt;You can download the matrix-library packages from the GitHub repositories below.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;https://github.com/ericzhng/matrix-library-lapack&lt;/li&gt;
  &lt;li&gt;https://github.com/ericzhng/matrix-library-scalapack&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After you have these two repositories, you can now go inside them and compile the codes and install the libraries to your system.&lt;/p&gt;

&lt;h2 id=&quot;install-lapack&quot;&gt;Install LAPACK&lt;/h2&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;matrix-library-lapack&lt;/code&gt; directory contains all source codes to LAPACK library, including its C version wrappers. Regardless, you can call the Fortran library or C library at your own convenience. BLAS and its C version, CBLAS, are included here. The original packages are missing some functions, compared to original BLAS package. The missing functions are added here.&lt;/p&gt;

&lt;p&gt;The steps to install LAPACK in your system is as follows:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt-get update&lt;/code&gt; to download package information from sources.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt-get -y upgrade&lt;/code&gt; to upgrade system changes.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt-get -y install build-essential gfortran&lt;/code&gt; to install missing compilers.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make all&lt;/code&gt; to compile all static and dynamic libraries. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make lib&lt;/code&gt; for static only, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make shared_lib&lt;/code&gt; depends on static libraries, and can only be issued after &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make lib&lt;/code&gt;. After the compiling finishes successfully, you should be able to see .a and .so libraries generated in the main directory.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make man&lt;/code&gt; to compile manual pages.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make install PREFIX=$(HOME)/matrix-library/lapack&lt;/code&gt; to install LAPACK libraries.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;install-scalapack&quot;&gt;Install ScaLAPACK&lt;/h2&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;matrix-library-scalapack&lt;/code&gt; directory contains all source codes to ScaLAPACK library, including BLACS, PBLAS and so on. These are a mix of C and Fortran programs. The compilation of them requires MPI tools.&lt;/p&gt;

&lt;p&gt;The steps to install ScaLAPACK in your system is as follows:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt-get update&lt;/code&gt; to download package information from sources.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt-get -y upgrade&lt;/code&gt; to upgrade system changes.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt-get -y install openmpi&lt;/code&gt; to install mpif90 and mpicc. Other MPI packages can be used as well.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make all&lt;/code&gt; to compile all static and dynamic libraries. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make lib&lt;/code&gt; for static only, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make shareso&lt;/code&gt; depends on static libraries, and can only be issued after &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make lib&lt;/code&gt;. After the compiling finishes successfully, you should be able to see .a and .so libraries generated in the main directory.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make install PREFIX=$(HOME)/matrix-library/scalapack&lt;/code&gt; to install ScaLAPACK libraries.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;test-lapack&quot;&gt;Test LAPACK&lt;/h2&gt;

&lt;p&gt;After successfully generating the libraries for LAPACK, you should be able to see the following files:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;libtmglib.a (.so)&lt;/li&gt;
  &lt;li&gt;libblas.a (.so)&lt;/li&gt;
  &lt;li&gt;libcblas.a (.so)&lt;/li&gt;
  &lt;li&gt;liblapack.a (.so)&lt;/li&gt;
  &lt;li&gt;liblapacke.a (.so)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make cblas_example&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make lapacke_example&lt;/code&gt; to see whether these libraries would work.&lt;/p&gt;

&lt;p&gt;To test whether BLAS and LAPACK libraries can be linked from the installed location, you need to follow the below steps.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Define LAPACK_LIB/LAPACK_INC environment variables in either .bashrc file or export them to use them temporarily. LAPACK_LIB=$(HOME)/matrix-library/lapack/lib64.&lt;/li&gt;
  &lt;li&gt;Add LAPACK_LIB to LD_LIBRARY_PATH if you need to use the shared libraries, by issuing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$LAPACK_LIB&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;For any program that needs to link to these libraries, you can either use the static libraries or shared libraries.&lt;/li&gt;
  &lt;li&gt;to use the static library, do something like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gcc -o test test.cpp $(LAPACK_LIB)/lapack.a $(LAPACK_LIB)/blas.a&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;to use the dynamic library, do something like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gcc -o test test.cpp -L$(LAPACK_LIB) -llapack -lblas&lt;/code&gt;. Sometimes you might need to add options like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-lgfortran&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;The order for the linking matters here. Always use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-llapacke -llapack -lcblas -lblas&lt;/code&gt; order.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;test-scalapack&quot;&gt;Test ScaLAPACK&lt;/h2&gt;

&lt;p&gt;After successfully generating the libraries for ScaLAPACK, you should be able to see the following files:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;libscalapack.a (.so)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make exe&lt;/code&gt; to see whether these libraries would work. However, you would need to have installed LAPACK libraries already in the OS system for these tests to work correctly.&lt;/p&gt;

&lt;p&gt;To test whether ScaLAPACK libraries can be linked from the installed location, you need to follow the below steps.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Define SCALAPACK_LIB environment variables in either .bashrc file or export them to use them temporarily. SCALAPACK_LIB=$(HOME)/matrix-library/scalapack/lib64. Sometimes if you are using BLACS, you need to add the header files as well. It is defined by: SCALAPACK_INC=$(HOME)/matrix-library/scalapack/include.&lt;/li&gt;
  &lt;li&gt;Add SCALAPACK_LIB to LD_LIBRARY_PATH if you need to use the shared libraries, by issuing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$SCALAPACK_LIB&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;For any program that needs to link to these libraries, you can either use the static libraries or shared libraries.&lt;/li&gt;
  &lt;li&gt;to use the static library, do something like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mpicc -o test test.cpp $(SCALAPACK_LIB)/scalapack.a $(LAPACK_LIB)/lapack.a $(LAPACK_LIB)/blas.a&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;to use the dynamic library, do something like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mpicc -o test test.cpp -L$(SCALAPACK_LIB) -lscalapack -llapack -lblas&lt;/code&gt;. Sometimes you might need to add options like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-lgfortran&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;The order for the linking matters here. Always use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-lscalapack -llapack -lblas&lt;/code&gt; order.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Dr. Hui Zhang</name></author><summary type="html">This post addresses the installation of matrix-library package in Ubuntu. Other Linux distrbutions are not tested here, but should be able to adapted correspondingly.</summary></entry></feed>